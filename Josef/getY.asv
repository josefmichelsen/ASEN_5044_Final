function y = getY(X, X_d, Y, Y_d, theta_0, time_vec)
% Author: Josef Michelsen
% Date: 11/30/2024

R_e = 6378; % Radius of the Earth [km]
omega_e = 2 * pi / 86400; % Turning rate of Earth [rad/s]
% 
% X_s_0 = R_e .* cos(theta_0);
% Y_s_0 = R_e .* sin(theta_0);

[X_s, Y_s] = getTrackingStationPos(omega_e, theta_0, R_e, time_vec);

figure;
hold on
for i = 1:size(X_s, 1)
    scatter3(X_s(i,:), Y_s(i,:), repmat(i, size(X_s(i,:))))
end
hold off

rho = nan(length(theta_0), length(X));
rho_d = nan(length(theta_0), length(X));
phi = nan(length(theta_0), length(X));
theta_i = nan(length(theta_0), length(X));
y = cell(length(theta_0), length(X));

for i = 5%1:length(theta_0)
    for j = 1:length(X)
        rho(i,j) = sqrt((X(j) - X_s(i,j))^2 + (Y(j) - Y_s(i,j))^2);
        % TODO: FIGURE OUT WHAT THE ACTUAL RATE OF CHANGE OF POSITION IS FOR THE
        % GROUND STATIONS, BELIEVE IT HAS TO DO WITH JUST THE ROTATION OF THE EARTH
        X_s_d = -omega_e * R_e * sin(omega_e * time_vec(j) + theta_0(i));
        Y_s_d = omega_e * R_e * cos(omega_e * time_vec(j) + theta_0(i));

        rho_d(i,j) = ((X(j) - X_s(i,j)) * (X_d(j) - X_s_d) + (Y(j) - Y_s(i,j)) * (Y_d(j) - Y_s_d)) / rho(i,j);
        
        phi(i,j) = atan2(Y(j) - Y_s(i,j), X(j) - X_s(i,j));
        
        theta_i(i,j) = atan2(Y_s(i,j), X_s(i,j));

        if pi/2 + theta_i(i,j) < -pi/2 + theta_i(i,j)
            fprintf("OH NO")
        end
        upper_bound = 

        if phi(i,j) > -pi/2 + theta_i(i,j) && phi(i,j) < pi/2 + theta_i(i,j)
            y{i,j} = [rho(i,j); rho_d(i,j); phi(i,j)];
        else
            y{i,j} = nan(3,1);
        end
    end
end

end

